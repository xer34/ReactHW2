{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport \"./style.css\";\nimport Results from \"../components/Results\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + _this.state.searchTitle).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          books: data\n        });\n\n        console.log(_this.state.books);\n      });\n    };\n\n    _this.state = {\n      books: []\n    };\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"React Google Books API Search\"))))), React.createElement(Container, {\n        fluid: true,\n        id: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.searchTitle,\n        onChange: this.handleInputChange,\n        name: \"searchTitle\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Submit Book\"))))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Alex\\Documents\\bootCamp\\Homework\\ReactHW2\\client\\src\\pages\\Search.js"],"names":["React","Component","Jumbotron","API","Col","Row","Container","Input","TextArea","FormBtn","Results","Search","props","loadBooks","getBooks","then","res","setState","books","data","title","author","synopsis","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","fetch","state","searchTitle","response","json","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport \"./style.css\";\nimport Results from \"../components/Results\";\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    };\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.loadBooks();\n  }\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  handleFormSubmit = event => {\n    fetch(\n      \"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.searchTitle\n    )\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          books: data\n        });\n        console.log(this.state.books);\n      });\n  };\n  render() {\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col size=\"md-12\">\n              <Jumbotron>\n                <h1>React Google Books API Search</h1>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Container>\n        <Container fluid id=\"formContainer\">\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Input\n                  value={this.state.searchTitle}\n                  onChange={this.handleInputChange}\n                  name=\"searchTitle\"\n                  placeholder=\"Title (required)\"\n                />\n                <FormBtn onClick={this.handleFormSubmit}>Submit Book</FormBtn>\n              </form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}