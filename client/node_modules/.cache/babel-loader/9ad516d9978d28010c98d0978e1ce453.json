{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Documents\\\\bootCamp\\\\Homework\\\\ReactHW2\\\\client\\\\src\\\\pages\\\\Search.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport Results from \"../components/Results\";\n\nvar books = require(\"google-books-search\");\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.loadBooks = function () {\n      API.getBooks().then(function (res) {\n        return _this.setState({\n          books: res.data,\n          title: \"\",\n          author: \"\",\n          synopsis: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      _this.setState({\n        loading: true\n      });\n\n      fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + _this.state.searchTitle).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          loading: false,\n          books: data\n        });\n      }).then(alert(_this.state.books));\n    };\n\n    _this.state = {\n      books: [],\n      searchTitle: \"\",\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    };\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBooks();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const ResultList = this.state.books.map(books => <Results id={books.id} />)\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"React Google Books API Search\"))))), React.createElement(Container, {\n        fluid: true,\n        id: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.searchTitle,\n        onChange: this.handleInputChange,\n        name: \"searchTitle\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Submit Book\"))))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["C:\\Users\\Alex\\Documents\\bootCamp\\Homework\\ReactHW2\\client\\src\\pages\\Search.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","axios","Results","books","require","Search","props","loadBooks","getBooks","then","res","setState","data","title","author","synopsis","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","loading","fetch","state","searchTitle","response","json","alert","authors","description","image","link","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport \"./style.css\";\nimport axios from \"axios\";\nimport Results from \"../components/Results\";\n\nconst books = require(\"google-books-search\");\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      books: [],\n      searchTitle: \"\",\n      title: \"\",\n      authors: \"\",\n      description: \"\",\n      image: \"\",\n      link: \"\"\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // handleFormSubmit = event => {\n  //   let currentComponent = this;\n  //   event.preventDefault();\n  //   books.search(this.state.searchTitle, function(error, results) {\n  //     if (!error) {\n  //       currentComponent.setState({\n  //         books: [results]\n  //       });\n  //       console.log(results);\n  //       console.log(this.state.books);\n  //     } else {\n  //       console.log(error);\n  //     }\n  //   });\n  // };\n\n  handleFormSubmit = event =>  {\n    this.setState({loading: true})\n    fetch(\"https://www.googleapis.com/books/v1/volumes?q=\" + this.state.searchTitle)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                loading: false,\n                books: data\n            })\n        })\n        .then(alert(this.state.books))\n}\n\n\n\n\n  render() {\n    // const ResultList = this.state.books.map(books => <Results id={books.id} />)\n\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col size=\"md-12\">\n              <Jumbotron>\n                <h1>React Google Books API Search</h1>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Container>\n        <Container fluid id=\"formContainer\">\n          <Row>\n            <Col size=\"md-12\">\n              <form>\n                <Input\n                  value={this.state.searchTitle}\n                  onChange={this.handleInputChange}\n                  name=\"searchTitle\"\n                  placeholder=\"Title (required)\"\n                />\n                <FormBtn onClick={this.handleFormSubmit}>Submit Book</FormBtn>\n              </form>\n            </Col>\n          </Row>\n          {/* <Col size=\"12\">\n            <li className=\"book\">\n              <Container fluid>\n                <Col size=\"12\">\n                  {this.state.books.length ? (\n                    <ResultList />\n                  ) : (\n                    <h3>No Results to Display</h3>\n                  )}\n                </Col>\n              </Container>\n              <p className=\"book-author\">\n                by {this.state.books.author} | {this.state.books.publisher}\n              </p>\n              <p className=\"book-description\">{this.state.books.description}</p>\n            </li>\n          </Col> */}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}